---
- name: Create directories (WallE)
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    mode: "0755"
    owner: root
    group: root
  with_items:
    - "{{ walle_log_dir }}"
    - "{{ walle_malware_database_location }}"

- name: Deploy (WallE)
  ansible.builtin.template:
    src: walle.py
    dest: "{{ walle_script_location }}"
    owner: root
    group: root
    mode: "0755"

- name: Clone malware database (WallE)
  ansible.builtin.git:
    repo: "{{ walle_malware_repo }}"
    dest: "{{ walle_malware_database_location }}"
    version: "{{ walle_malware_database_version }}"


- name: Add env variable for database (WallE)
  ansible.builtin.lineinfile:
    path: "{{ walle_bashrc }}"
    regexp: "^export {{ item.key }}="
    line: 'export {{ item.key }}="{{ item.value }}"'
  with_items: "{{ walle_envs_database }}"

- name: Add env variables for user deletion (WallE)
  ansible.builtin.lineinfile:
    path: "{{ walle_bashrc }}"
    regexp: "^export {{ item.key }}="
    line: 'export {{ item.key }}="{{ item.value }}"'
  with_items: "{{ walle_envs_user_deletion }}"
  when: walle_delete_users

- name: Add env variables for slack notifications (WallE)
  ansible.builtin.lineinfile:
    path: "{{ walle_bashrc }}"
    regexp: "^export {{ item.key }}="
    line: 'export {{ item.key }}="{{ item.value }}"'
  with_items: "{{ walle_envs_slack }}"
  when: walle_slack_alerts

- name: Create logfile (WallE)
  ansible.builtin.file:
    state: touch
    path: "{{ walle_log_dir }}/walle.log"
    mode: "0664"
    owner: "{{ walle_user_name }}"
    group: "{{ walle_user_group }}"

- name: Setup logrotate (WallE)
  ansible.builtin.copy:
    content: |
      {{ walle_log_dir }}/walle.log
      {
          rotate 6
          daily
          missingok
          dateext
          copytruncate
          notifempty
          compress
      }
    dest: /etc/logrotate.d/walle
    mode: "0664"
    owner: root
    group: root

- name: Add to cron (WallE)
  ansible.builtin.cron:
    name: "WallE - Clean up Malware"
    day: "{{ walle_cron_day }}"
    hour: "{{ walle_cron_hour }}"
    minute: "{{ walle_cron_minute }}"
    user: "{{ walle_user_name }}"
    job: >
      source {{ walle_bashrc }};
      {% if walle_virtualenv %} source {{ walle_virtualenv }}/bin/activate;
      {{ walle_virtualenv }}/bin/python {% else %}
      {{ walle_python }} {% endif %}
      {{ walle_script_location }}
      {% if walle_tool %} --tool {{ walle_tool }} {% endif %}
      {% if walle_filesize_min %} --min-size
      {{ walle_filesize_min }} {% endif %}
      {% if walle_filesize_max %} --max-size {{ walle_filesize_max }} {% endif %}
      {% if walle_since_hours %} --since {{ walle_since_hours }} {% endif %}
      {% if walle_verbose %} -v {% endif %}
      {% if walle_slack_alerts %} --slack-alerts {% endif %}
      {% if walle_delete_users %} --delete-user {{ walle_delete_threshold }}
      {% endif %}
      >> {{ walle_log_dir }}/walle.log 2>&1
